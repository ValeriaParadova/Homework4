#–í—ã—á–∏—Å–ª–∏—Ç—å —á–∏—Å–ª–æ c –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é d
#–ü—Ä–∏–º–µ—Ä:
#- –ø—Ä–∏ d = 0.001, œÄ = 3.141.    10^(-1) ‚â§ d ‚â§10^(-10)

import math
n = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π: '))
print('–ß–∏—Å–ª–æ ùúã: {:.50f}'.format(math.pi))
a = math.pi
b = round(a,n+1)*10**n
c = math.modf(b)
a = c[1] / 10**n
print('–ß–∏—Å–ª–æ ùúã —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é:',a)


#–ó–∞–¥–∞–π—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ N. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, 
#–∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–∞–≤–∏—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Å—Ç—ã—Ö –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π —á–∏—Å–ª–∞ N.



def InputNumbers(inputText):
    is_OK = False
    while not is_OK:
        try:
            number = int(input(f"{inputText}"))
            is_OK = True
        except ValueError:
            print("–ö–∞–∫–æ–µ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ!")
    return number

def func_search(num):
    rezult = []

    for i in range(2, num):
        while num % i == 0:
            num /= i
            rezult.append(i)
    return rezult

num = InputNumbers("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ N: ")

print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–ª–µ–Ω–∏—è: {func_search(num)}")



#–ó–∞–¥–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, 
#–∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–µ–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.


a = [1, 2, 2, 3, 4, 6, 8, 8, 2, 9, 7, 4, 9]
i = a[0]
c = []
for i in a:
    if i in c:
       continue
    else:
       c.append(i)
print(c)


#–ó–∞–¥–∞–Ω–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å k. –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–º 
#–æ–±—Ä–∞–∑–æ–º —Å–ø–∏—Å–æ–∫ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ (–∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 0 –¥–æ 100) 
#–º–Ω–æ–≥–æ—á–ª–µ–Ω–∞ –∏ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª –º–Ω–æ–≥–æ—á–ª–µ–Ω —Å—Ç–µ–ø–µ–Ω–∏ k.
#–ü—Ä–∏–º–µ—Ä:
#- k=2 => 2*x¬≤ + 4*x + 5 = 0 –∏–ª–∏ x¬≤ + 5 = 0 –∏–ª–∏ 10*x¬≤ = 0

import random

k = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: '))
a = int(random.randint(0,100))
b = int(random.randint(0,100))
c = int(random.randint(0,100))
if a != 0:
    first = (str(a) + "x^" + str(k) + " + ")
else:
    first = (str())
if b != 0:
    second = (str(b) + "x" + " + ")
else:
    second = (str())
if c != 0:
    third = (str(c) + " = 0")
else:
    third = (str())
print(f'{first}{second}{third}')


#–î–∞–Ω—ã –¥–≤–∞ —Ñ–∞–π–ª–∞, –≤ –∫–∞–∂–¥–æ–º –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞–ø–∏—Å—å –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞. 
#–ó–∞–¥–∞—á–∞ - —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å—É–º–º—É –º–Ω–æ–≥–æ—á–ª–µ–Ω–æ–≤.

with open('poly_1.txt', 'w', encoding='utf-8') as file:
    file.write('2*x^2 + 5*x^5')
with open('poly_2.txt', 'w', encoding='utf-8') as file:
    file.write('23*x^4 + 9*x^6')

with open('poly_1.txt','r') as file:
    poly_1 = file.readline()
    list_of_poly_1 = poly_1.split()


with open('poly_2.txt','r') as file:
    poly_2 = file.readline()
    list_of_poly_2 = poly_2.split()

print(f'{list_of_poly_1} + {list_of_poly_2}')
sum_poly = list_of_poly_1 + list_of_poly_2

with open('sum_poly.txt', 'w', encoding='utf-8') as file:
    file.write(f'{list_of_poly_1} + {list_of_poly_2}')